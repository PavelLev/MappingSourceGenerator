namespace MappingSourceGenerator.UnitTests;

public static class SimpleCollectionTestData
{
    public static IEnumerable<object[]> Data
        => new[]
        {
            new object[]
            {
                "PrimitiveTypeReadOnlyCollectionTest",
                """
                #nullable enable
                using System;
                using System.Collections.Generic;
                using MappingSourceGenerator.Markers;

                namespace MappingSourceGenerator.UnitTests;

                public class SimpleCollectionTests
                {
                    public record PersonWithEmails1(
                        string Name,
                        IReadOnlyCollection<string> Emails);

                    public record PersonWithEmails2(
                        string Name,
                        IReadOnlyCollection<string> Emails);
                }

                public static partial class SimpleCollectionTestsMapper
                {
                    [GenerateMapping]
                    public static partial SimpleCollectionTests.PersonWithEmails2 Map(this SimpleCollectionTests.PersonWithEmails1 personWithEmails1);
                }
                """,
                """
                // <auto-generated/>
                #pragma warning disable
                #nullable enable
                using System;
                using System.Linq;

                namespace MappingSourceGenerator.UnitTests;

                partial class SimpleCollectionTestsMapper
                {
                    public static partial MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmails2 Map(
                        this MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmails1 personWithEmails1)
                        => new(
                            personWithEmails1.Name,
                            personWithEmails1.Emails);
                }
                """
            },
            new object[]
            {
                "PrimitiveTypeListTest",
                """
                #nullable enable
                using System;
                using System.Collections.Generic;
                using MappingSourceGenerator.Markers;

                namespace MappingSourceGenerator.UnitTests;

                public class SimpleCollectionTests
                {
                    public record PersonWithEmailList1(
                        string Name,
                        List<string> Emails);
                
                    public record PersonWithEmailList2(
                        string Name,
                        List<string> Emails);
                }

                public static partial class SimpleCollectionTestsMapper
                {
                    [GenerateMapping]
                    public static partial SimpleCollectionTests.PersonWithEmailList2 Map(this SimpleCollectionTests.PersonWithEmailList1 personWithEmailList1);
                }
                """,
                """
                // <auto-generated/>
                #pragma warning disable
                #nullable enable
                using System;
                using System.Linq;

                namespace MappingSourceGenerator.UnitTests;

                partial class SimpleCollectionTestsMapper
                {
                    public static partial MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmailList2 Map(
                        this MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmailList1 personWithEmailList1)
                        => new(
                            personWithEmailList1.Name,
                            personWithEmailList1.Emails);
                }
                """
            },
            new object[]
            {
                "EnumEnumerableTest",
                """
                #nullable enable
                using System;
                using System.Collections.Generic;
                using MappingSourceGenerator.Markers;

                namespace MappingSourceGenerator.UnitTests;

                public class SimpleCollectionTests
                {
                    public record PersonWithPhoneTypes1(
                        string Name,
                        IEnumerable<PhoneType1> PhoneTypes);

                    public enum PhoneType1
                    {
                        Android,
                        Ios,
                        Other,
                    }

                    public record PersonWithPhoneTypes2(
                        string Name,
                        IEnumerable<PhoneType2> PhoneTypes);

                    public enum PhoneType2
                    {
                        Android,
                        Ios,
                        Other,
                    }
                }

                public static partial class SimpleCollectionTestsMapper
                {
                    [GenerateMapping]
                    public static partial SimpleCollectionTests.PersonWithPhoneTypes2 Map(this SimpleCollectionTests.PersonWithPhoneTypes1 personWithPhoneTypes1);
                }
                """,
                """
                // <auto-generated/>
                #pragma warning disable
                #nullable enable
                using System;
                using System.Linq;

                namespace MappingSourceGenerator.UnitTests;

                partial class SimpleCollectionTestsMapper
                {
                    public static MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType2 Map(
                        this MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType1 phoneType1)
                        => phoneType1 switch
                        {
                            MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType1.Android => MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType2.Android,
                            MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType1.Ios => MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType2.Ios,
                            MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType1.Other => MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType2.Other,
                            _ => throw new InvalidOperationException($"Unable to map MappingSourceGenerator.UnitTests.SimpleCollectionTests.PhoneType1.{phoneType1}"),
                        };

                    public static partial MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithPhoneTypes2 Map(
                        this MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithPhoneTypes1 personWithPhoneTypes1)
                        => new(
                            personWithPhoneTypes1.Name,
                            personWithPhoneTypes1.PhoneTypes.Select(Map).ToArray());
                }
                """
            },
            new object[]
            {
                "ReadOnlyCollectionToNullableReadOnlyCollectionTest",
                """
                #nullable enable
                using System;
                using System.Collections.Generic;
                using MappingSourceGenerator.Markers;

                namespace MappingSourceGenerator.UnitTests;

                public class SimpleCollectionTests
                {
                    public record PersonWithEmails1(
                        string Name,
                        IReadOnlyCollection<string> Emails);

                    public record PersonWithOptionalEmails2(
                        string Name,
                        IReadOnlyCollection<string>? Emails);
                }

                public static partial class SimpleCollectionTestsMapper
                {
                    [GenerateMapping]
                    public static partial SimpleCollectionTests.PersonWithOptionalEmails2 MapToOptional(this SimpleCollectionTests.PersonWithEmails1 personWithEmails1);
                }
                """,
                """
                // <auto-generated/>
                #pragma warning disable
                #nullable enable
                using System;
                using System.Linq;

                namespace MappingSourceGenerator.UnitTests;

                partial class SimpleCollectionTestsMapper
                {
                    public static partial MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithOptionalEmails2 MapToOptional(
                        this MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmails1 personWithEmails1)
                        => new(
                            personWithEmails1.Name,
                            personWithEmails1.Emails);
                }
                """
            },
            new object[]
            {
                "PrimitiveTypeArrayTest",
                """
                #nullable enable
                using System;
                using System.Collections.Generic;
                using MappingSourceGenerator.Markers;

                namespace MappingSourceGenerator.UnitTests;

                public class SimpleCollectionTests
                {
                    public record PersonWithEmailArray1(
                        string Name,
                        string[] Emails);
                
                    public record PersonWithEmailArray2(
                        string Name,
                        string[] Emails);
                }

                public static partial class SimpleCollectionTestsMapper
                {
                    [GenerateMapping]
                    public static partial SimpleCollectionTests.PersonWithEmailArray2 Map(this SimpleCollectionTests.PersonWithEmailArray1 personWithEmailArray1);
                }
                """,
                """
                // <auto-generated/>
                #pragma warning disable
                #nullable enable
                using System;
                using System.Linq;

                namespace MappingSourceGenerator.UnitTests;

                partial class SimpleCollectionTestsMapper
                {
                    public static partial MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmailArray2 Map(
                        this MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmailArray1 personWithEmailArray1)
                        => new(
                            personWithEmailArray1.Name,
                            personWithEmailArray1.Emails);
                }
                """
            },
            new object[]
            {
                "PrimitiveTypeReadOnlyListToReadOnlyCollectionTest",
                """
                #nullable enable
                using System;
                using System.Collections.Generic;
                using MappingSourceGenerator.Markers;

                namespace MappingSourceGenerator.UnitTests;

                public class SimpleCollectionTests
                {
                    public record PersonWithEmailReadOnlyList1(
                        string Name,
                        IReadOnlyList<string> Emails);

                    public record PersonWithEmailReadOnlyCollection2(
                        string Name,
                        IReadOnlyCollection<string> Emails);
                }

                public static partial class SimpleCollectionTestsMapper
                {
                    [GenerateMapping]
                    public static partial SimpleCollectionTests.PersonWithEmailReadOnlyCollection2 Map(this SimpleCollectionTests.PersonWithEmailReadOnlyList1 personWithEmailReadOnlyList1);
                }
                """,
                """
                // <auto-generated/>
                #pragma warning disable
                #nullable enable
                using System;
                using System.Linq;

                namespace MappingSourceGenerator.UnitTests;

                partial class SimpleCollectionTestsMapper
                {
                    public static partial MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmailReadOnlyCollection2 Map(
                        this MappingSourceGenerator.UnitTests.SimpleCollectionTests.PersonWithEmailReadOnlyList1 personWithEmailReadOnlyList1)
                        => new(
                            personWithEmailReadOnlyList1.Name,
                            personWithEmailReadOnlyList1.Emails);
                }
                """
            },
        };

}